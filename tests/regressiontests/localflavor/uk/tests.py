from __future__ import unicode_literals

from django.contrib.localflavor.uk.forms import (
    UKPhoneNumberField
)

from django.test import SimpleTestCase


    def test_UKPhoneNumberField(self):
        error_format = ['Phone numbers must be in +XXXXXXXXXXX format.']
        valid = {
            '020 3000 5555': '+442030005555',
            '(020) 3000 5555': '+442030005555',
            '+44 20 3000 5555': '+442030005555',
            '0203 000 5555': '+442030005555',
            '(0203) 000 5555': '+442030005555',
            '02030 005 555': '+442030005555',
            '+44 (0) 20 3000 5555': '+442030005555',
            '+44(0)203 000 5555': '+442030005555',
            '00 (44) 2030 005 555': '+442030005555',
            '(+44 203) 000 5555': '+442030005555',
            '(+44) 203 000 5555': '+442030005555',
            '011 44 203 000 5555': '+442030005555',
            '020-3000-5555': '+442030005555',
            '(020)-3000-5555': '+442030005555',
            '+44-20-3000-5555': '+442030005555',
            '0203-000-5555': '+442030005555',
            '(0203)-000-5555': '+442030005555',
            '02030-005-555': '+442030005555',
            '+44-(0)-20-3000-5555': '+442030005555',
            '+44(0)203-000-5555': '+442030005555',
            '00-(44)-2030-005-555': '+442030005555',
            '(+44-203)-000-5555': '+442030005555',
            '(+44)-203-000-5555': '+442030005555',
            '011-44-203-000-5555': '+442030005555'
        }
        invalid = {
            '011 44 203 000 5555 5': length,
            '555 7777': partial,
            '01750 4455': length,
            '01750 4445555': length,
            '+33 1 44 55 66 77': non_uk,

        }
        self.assertFieldOutput(UKPhoneNumberField, valid, invalid)
